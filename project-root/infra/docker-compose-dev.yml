version: "3.8"
services:
  db:
    image: postgres
    container_name: postgres-dev
    restart: always
    environment:
      POSTGRES_DB: userdb_dev
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  user-service:
    build: ./backend/user-service
    container_name: user-service-dev
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/userdb_dev
      - SPRING_DATASOURCE_USERNAME=devuser
      - SPRING_DATASOURCE_PASSWORD=devpass
    ports:
      - "8081:8080"
    depends_on:
      - db
    networks:
      - app-network

  property-service:
    build: ./backend/property-service
    container_name: property-service-dev
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/propertydb_dev
      - SPRING_DATASOURCE_USERNAME=devuser
      - SPRING_DATASOURCE_PASSWORD=devpass
    ports:
      - "8082:8080"
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend-dev
    restart: always
    ports:
      - "3000:80"
    networks:
      - app-network

  scraper-service:
    build: ./backend/scraper-service
    container_name: scraper-service-dev
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
